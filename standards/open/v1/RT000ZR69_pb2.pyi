"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.type.date_pb2
import google.type.money_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class RT000ZR69(google.protobuf.message.Message):
    """Transfer Agency KPI Report for governance oversight and reporting for UCITS funds"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Account(google.protobuf.message.Message):
        """The definition of an account resource"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _AccountType:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _AccountTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.Account._AccountType.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            TYPE_UNSPECIFIED: RT000ZR69.Account._AccountType.ValueType  # 0
            """AccountType unspecified"""
            NATURAL_PERSON: RT000ZR69.Account._AccountType.ValueType  # 1
            """The account holder is a natural person"""
            LEGAL_ENTITY: RT000ZR69.Account._AccountType.ValueType  # 2
            """The account holder is a legal entity"""

        class AccountType(_AccountType, metaclass=_AccountTypeEnumTypeWrapper):
            """Types of account holders"""

        TYPE_UNSPECIFIED: RT000ZR69.Account.AccountType.ValueType  # 0
        """AccountType unspecified"""
        NATURAL_PERSON: RT000ZR69.Account.AccountType.ValueType  # 1
        """The account holder is a natural person"""
        LEGAL_ENTITY: RT000ZR69.Account.AccountType.ValueType  # 2
        """The account holder is a legal entity"""

        class _Status:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.Account._Status.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            STATE_UNSPECIFIED: RT000ZR69.Account._Status.ValueType  # 0
            """Account status unspecified"""
            ACTIVE: RT000ZR69.Account._Status.ValueType  # 1
            """Account status active"""
            INACTIVE: RT000ZR69.Account._Status.ValueType  # 2
            """Account status inactive"""

        class Status(_Status, metaclass=_StatusEnumTypeWrapper):
            """Enumerations of the status of the account"""

        STATE_UNSPECIFIED: RT000ZR69.Account.Status.ValueType  # 0
        """Account status unspecified"""
        ACTIVE: RT000ZR69.Account.Status.ValueType  # 1
        """Account status active"""
        INACTIVE: RT000ZR69.Account.Status.ValueType  # 2
        """Account status inactive"""

        class _Risk:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _RiskEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.Account._Risk.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            RISK_UNSPECIFIED: RT000ZR69.Account._Risk.ValueType  # 0
            """Client risk unspecified"""
            LOW: RT000ZR69.Account._Risk.ValueType  # 1
            """The client is deemed low risk"""
            MEDIUM: RT000ZR69.Account._Risk.ValueType  # 2
            """The client is deemed medium risk"""
            HIGH: RT000ZR69.Account._Risk.ValueType  # 3
            """The client is deemed high risk"""

        class Risk(_Risk, metaclass=_RiskEnumTypeWrapper):
            """Enumerations of the risk categorizations"""

        RISK_UNSPECIFIED: RT000ZR69.Account.Risk.ValueType  # 0
        """Client risk unspecified"""
        LOW: RT000ZR69.Account.Risk.ValueType  # 1
        """The client is deemed low risk"""
        MEDIUM: RT000ZR69.Account.Risk.ValueType  # 2
        """The client is deemed medium risk"""
        HIGH: RT000ZR69.Account.Risk.ValueType  # 3
        """The client is deemed high risk"""

        @typing_extensions.final
        class Subscription(google.protobuf.message.Message):
            """Definition of a client subscription"""

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            class _ShareClassIdentifierTypes:
                ValueType = typing.NewType("ValueType", builtins.int)
                V: typing_extensions.TypeAlias = ValueType

            class _ShareClassIdentifierTypesEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType], builtins.type):  # noqa: F821
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
                IDENTIFIER_UNSPECIFIED: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 0
                """Source not specified by the user."""
                ISIN: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 1
                """ISO 6166 code of ISIN when available"""
                CUSIP: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 2
                """CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies"""
                SEDOL: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 3
                """SEDOL - Stock Exchange Daily Official List for the London Stock Exchange"""
                WKN: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 4
                """WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number"""
                BBG_TICKER: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 5
                """Bloomberg Ticker - Bloomberg letters code that identify a company's securities"""
                BBGID: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 6
                """BBGID - The Bloomberg Global ID"""
                RIC: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 7
                """Reuters RIC - Reuters instrument code"""
                FIGI: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 8
                """FIGI - Financial_Instrument Global Identifier"""
                LEI: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 9
                """LEI - Legal Entity Identifier"""
                PERM_ID: RT000ZR69.Account.Subscription._ShareClassIdentifierTypes.ValueType  # 10
                """PermID - Refinitiv Permanent Identifiers"""

            class ShareClassIdentifierTypes(_ShareClassIdentifierTypes, metaclass=_ShareClassIdentifierTypesEnumTypeWrapper):
                """Enumerations of financial identifiers"""

            IDENTIFIER_UNSPECIFIED: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 0
            """Source not specified by the user."""
            ISIN: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 1
            """ISO 6166 code of ISIN when available"""
            CUSIP: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 2
            """CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies"""
            SEDOL: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 3
            """SEDOL - Stock Exchange Daily Official List for the London Stock Exchange"""
            WKN: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 4
            """WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number"""
            BBG_TICKER: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 5
            """Bloomberg Ticker - Bloomberg letters code that identify a company's securities"""
            BBGID: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 6
            """BBGID - The Bloomberg Global ID"""
            RIC: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 7
            """Reuters RIC - Reuters instrument code"""
            FIGI: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 8
            """FIGI - Financial_Instrument Global Identifier"""
            LEI: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 9
            """LEI - Legal Entity Identifier"""
            PERM_ID: RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType  # 10
            """PermID - Refinitiv Permanent Identifiers"""

            SHARE_CLASS_ID_FIELD_NUMBER: builtins.int
            SHARE_CLASS_ID_TYPE_FIELD_NUMBER: builtins.int
            SHARE_CLASS_EXTENSION_FIELD_NUMBER: builtins.int
            SETTLED_UNITS_FIELD_NUMBER: builtins.int
            UNSETTLED_UNITS_FIELD_NUMBER: builtins.int
            NAV_PER_UNIT_FIELD_NUMBER: builtins.int
            TOTAL_VALUE_FIELD_NUMBER: builtins.int
            share_class_id: builtins.str
            """The global identifier of the share class"""
            share_class_id_type: global___RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType
            """Codification chosen to identify the share class"""
            share_class_extension: builtins.str
            """Extension that identifies the share class.
            Should conform to: https://openfunds.org/OFST020050 (Share Class Extension)
            """
            settled_units: builtins.float
            """The number of settled units"""
            unsettled_units: builtins.float
            """The number of unsettled units"""
            @property
            def nav_per_unit(self) -> google.type.money_pb2.Money:
                """The nav of the subscription per unit"""
            @property
            def total_value(self) -> google.type.money_pb2.Money:
                """The current total value of the subscription"""
            def __init__(
                self,
                *,
                share_class_id: builtins.str = ...,
                share_class_id_type: global___RT000ZR69.Account.Subscription.ShareClassIdentifierTypes.ValueType = ...,
                share_class_extension: builtins.str = ...,
                settled_units: builtins.float = ...,
                unsettled_units: builtins.float = ...,
                nav_per_unit: google.type.money_pb2.Money | None = ...,
                total_value: google.type.money_pb2.Money | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["nav_per_unit", b"nav_per_unit", "total_value", b"total_value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["nav_per_unit", b"nav_per_unit", "settled_units", b"settled_units", "share_class_extension", b"share_class_extension", "share_class_id", b"share_class_id", "share_class_id_type", b"share_class_id_type", "total_value", b"total_value", "unsettled_units", b"unsettled_units"]) -> None: ...

        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        ACCOUNT_TYPE_FIELD_NUMBER: builtins.int
        ACCOUNT_ID_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        RISK_FIELD_NUMBER: builtins.int
        PURCHASE_STOP_FIELD_NUMBER: builtins.int
        REDEMPTION_STOP_FIELD_NUMBER: builtins.int
        STOP_RED_SETTLE_FIELD_NUMBER: builtins.int
        TRANSFER_INWARD_STOP_FIELD_NUMBER: builtins.int
        TRANSFER_OUT_STOP_FIELD_NUMBER: builtins.int
        SUBSCRIPTIONS_FIELD_NUMBER: builtins.int
        PERCENT_TOTAL_SHARES_FIELD_NUMBER: builtins.int
        ACCOUNT_VALUE_FIELD_NUMBER: builtins.int
        PERCENT_TOTAL_AUM_FIELD_NUMBER: builtins.int
        TRANSACTIONS_FIELD_NUMBER: builtins.int
        display_name: builtins.str
        """The resource name of the client"""
        account_type: global___RT000ZR69.Account.AccountType.ValueType
        """The type of account"""
        account_id: builtins.str
        """The internal unique identifier of the account"""
        status: global___RT000ZR69.Account.Status.ValueType
        """The status of the account (i.e. active or inactive)"""
        risk: global___RT000ZR69.Account.Risk.ValueType
        """The risk categorization of the client (i.e. low, medium or high)"""
        purchase_stop: builtins.bool
        """Whether the client has a purchase stop"""
        redemption_stop: builtins.bool
        """Whether the client has a redemption stop"""
        stop_red_settle: builtins.bool
        """Whether the client has a stop on redemptions settling"""
        transfer_inward_stop: builtins.bool
        """Whether the client has a stop on transfers in"""
        transfer_out_stop: builtins.bool
        """Whether the client has a stop on transfers out"""
        @property
        def subscriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Account.Subscription]:
            """The subscriptions (i.e. the share class holdings) of the client"""
        percent_total_shares: builtins.float
        """The share of total shares - unsettled"""
        @property
        def account_value(self) -> google.type.money_pb2.Money:
            """The total value of the account"""
        percent_total_aum: builtins.float
        """The share of total aum - unsettled"""
        @property
        def transactions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Transaction]:
            """The list of transactions made by the account"""
        def __init__(
            self,
            *,
            display_name: builtins.str = ...,
            account_type: global___RT000ZR69.Account.AccountType.ValueType = ...,
            account_id: builtins.str = ...,
            status: global___RT000ZR69.Account.Status.ValueType = ...,
            risk: global___RT000ZR69.Account.Risk.ValueType = ...,
            purchase_stop: builtins.bool = ...,
            redemption_stop: builtins.bool = ...,
            stop_red_settle: builtins.bool = ...,
            transfer_inward_stop: builtins.bool = ...,
            transfer_out_stop: builtins.bool = ...,
            subscriptions: collections.abc.Iterable[global___RT000ZR69.Account.Subscription] | None = ...,
            percent_total_shares: builtins.float = ...,
            account_value: google.type.money_pb2.Money | None = ...,
            percent_total_aum: builtins.float = ...,
            transactions: collections.abc.Iterable[global___RT000ZR69.Transaction] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["account_value", b"account_value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["account_id", b"account_id", "account_type", b"account_type", "account_value", b"account_value", "display_name", b"display_name", "percent_total_aum", b"percent_total_aum", "percent_total_shares", b"percent_total_shares", "purchase_stop", b"purchase_stop", "redemption_stop", b"redemption_stop", "risk", b"risk", "status", b"status", "stop_red_settle", b"stop_red_settle", "subscriptions", b"subscriptions", "transactions", b"transactions", "transfer_inward_stop", b"transfer_inward_stop", "transfer_out_stop", b"transfer_out_stop"]) -> None: ...

    @typing_extensions.final
    class Transaction(google.protobuf.message.Message):
        """Definition of a transaction"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _AccountType:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _AccountTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.Transaction._AccountType.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            TYPE_UNSPECIFIED: RT000ZR69.Transaction._AccountType.ValueType  # 0
            """AccountType unspecified"""
            NATURAL_PERSON: RT000ZR69.Transaction._AccountType.ValueType  # 1
            """The account holder is a natural person"""
            LEGAL_ENTITY: RT000ZR69.Transaction._AccountType.ValueType  # 2
            """The account holder is a legal entity"""

        class AccountType(_AccountType, metaclass=_AccountTypeEnumTypeWrapper):
            """Types of account holders"""

        TYPE_UNSPECIFIED: RT000ZR69.Transaction.AccountType.ValueType  # 0
        """AccountType unspecified"""
        NATURAL_PERSON: RT000ZR69.Transaction.AccountType.ValueType  # 1
        """The account holder is a natural person"""
        LEGAL_ENTITY: RT000ZR69.Transaction.AccountType.ValueType  # 2
        """The account holder is a legal entity"""

        class _ShareClassIdentifierTypes:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _ShareClassIdentifierTypesEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            IDENTIFIER_UNSPECIFIED: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 0
            """Source not specified by the user."""
            ISIN: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 1
            """ISO 6166 code of ISIN when available"""
            CUSIP: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 2
            """CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies"""
            SEDOL: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 3
            """SEDOL - Stock Exchange Daily Official List for the London Stock Exchange"""
            WKN: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 4
            """WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number"""
            BBG_TICKER: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 5
            """Bloomberg Ticker - Bloomberg letters code that identify a company's securities"""
            BBGID: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 6
            """BBGID - The Bloomberg Global ID"""
            RIC: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 7
            """Reuters RIC - Reuters instrument code"""
            FIGI: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 8
            """FIGI - Financial_Instrument Global Identifier"""
            LEI: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 9
            """LEI - Legal Entity Identifier"""
            PERM_ID: RT000ZR69.Transaction._ShareClassIdentifierTypes.ValueType  # 10
            """PermID - Refinitiv Permanent Identifiers"""

        class ShareClassIdentifierTypes(_ShareClassIdentifierTypes, metaclass=_ShareClassIdentifierTypesEnumTypeWrapper):
            """Enumerations of financial identifiers"""

        IDENTIFIER_UNSPECIFIED: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 0
        """Source not specified by the user."""
        ISIN: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 1
        """ISO 6166 code of ISIN when available"""
        CUSIP: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 2
        """CUSIP - The Committee on Uniform Securities Identification Procedures number assigned by the CUSIP Service Bureau for U.S. and Canadian companies"""
        SEDOL: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 3
        """SEDOL - Stock Exchange Daily Official List for the London Stock Exchange"""
        WKN: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 4
        """WKN - Wertpapier Kenn-Nummer, the alphanumeric German identification number"""
        BBG_TICKER: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 5
        """Bloomberg Ticker - Bloomberg letters code that identify a company's securities"""
        BBGID: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 6
        """BBGID - The Bloomberg Global ID"""
        RIC: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 7
        """Reuters RIC - Reuters instrument code"""
        FIGI: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 8
        """FIGI - Financial_Instrument Global Identifier"""
        LEI: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 9
        """LEI - Legal Entity Identifier"""
        PERM_ID: RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType  # 10
        """PermID - Refinitiv Permanent Identifiers"""

        class _TransactionType:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _TransactionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.Transaction._TransactionType.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            TRANSACTION_TYPE_UNSPECIFIED: RT000ZR69.Transaction._TransactionType.ValueType  # 0
            SUBSCRIPTION: RT000ZR69.Transaction._TransactionType.ValueType  # 1
            """Purchase of shares in the specified share class"""
            REDEMPTION: RT000ZR69.Transaction._TransactionType.ValueType  # 2
            """Redemption of shares from the specified share class"""
            TRANSFER: RT000ZR69.Transaction._TransactionType.ValueType  # 3
            """Movement between accounts for a single share class (ISIN), for example from PartyA to PartyB"""
            SWITCH: RT000ZR69.Transaction._TransactionType.ValueType  # 4
            """Movement between share classes (i.e. ISIN) for a single account, for example PartyA switches their holdings of ShareClassA for holdings of ShareClassB"""

        class TransactionType(_TransactionType, metaclass=_TransactionTypeEnumTypeWrapper):
            """Enumerations of transaction types"""

        TRANSACTION_TYPE_UNSPECIFIED: RT000ZR69.Transaction.TransactionType.ValueType  # 0
        SUBSCRIPTION: RT000ZR69.Transaction.TransactionType.ValueType  # 1
        """Purchase of shares in the specified share class"""
        REDEMPTION: RT000ZR69.Transaction.TransactionType.ValueType  # 2
        """Redemption of shares from the specified share class"""
        TRANSFER: RT000ZR69.Transaction.TransactionType.ValueType  # 3
        """Movement between accounts for a single share class (ISIN), for example from PartyA to PartyB"""
        SWITCH: RT000ZR69.Transaction.TransactionType.ValueType  # 4
        """Movement between share classes (i.e. ISIN) for a single account, for example PartyA switches their holdings of ShareClassA for holdings of ShareClassB"""

        ACCOUNT_NAME_FIELD_NUMBER: builtins.int
        ACCOUNT_TYPE_FIELD_NUMBER: builtins.int
        ACCOUNT_ID_FIELD_NUMBER: builtins.int
        SHARE_CLASS_ID_FIELD_NUMBER: builtins.int
        SHARE_CLASS_ID_TYPE_FIELD_NUMBER: builtins.int
        SHARE_CLASS_EXTENSION_FIELD_NUMBER: builtins.int
        UNITS_FIELD_NUMBER: builtins.int
        NAV_PER_UNIT_FIELD_NUMBER: builtins.int
        TOTAL_VALUE_FIELD_NUMBER: builtins.int
        TRANSACTION_TYPE_FIELD_NUMBER: builtins.int
        account_name: builtins.str
        """The resource name of the client"""
        account_type: global___RT000ZR69.Transaction.AccountType.ValueType
        """The type of account"""
        account_id: builtins.str
        """The internal unique identifier of the account"""
        share_class_id: builtins.str
        """The global identifier of the share class"""
        share_class_id_type: global___RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType
        """Codification chosen to identify the share class"""
        share_class_extension: builtins.str
        """Extension that identifies the share class.
        Should conform to: https://openfunds.org/OFST020050 (Share Class Extension)
        """
        units: builtins.float
        """The number of settled units subscribed to or redeeemed"""
        @property
        def nav_per_unit(self) -> google.type.money_pb2.Money:
            """The nav of the subscription per unit at which the transaction was priced"""
        @property
        def total_value(self) -> google.type.money_pb2.Money:
            """The current total value of the transaction"""
        transaction_type: global___RT000ZR69.Transaction.TransactionType.ValueType
        """The type of transaction"""
        def __init__(
            self,
            *,
            account_name: builtins.str = ...,
            account_type: global___RT000ZR69.Transaction.AccountType.ValueType = ...,
            account_id: builtins.str = ...,
            share_class_id: builtins.str = ...,
            share_class_id_type: global___RT000ZR69.Transaction.ShareClassIdentifierTypes.ValueType = ...,
            share_class_extension: builtins.str = ...,
            units: builtins.float = ...,
            nav_per_unit: google.type.money_pb2.Money | None = ...,
            total_value: google.type.money_pb2.Money | None = ...,
            transaction_type: global___RT000ZR69.Transaction.TransactionType.ValueType = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["nav_per_unit", b"nav_per_unit", "total_value", b"total_value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["account_id", b"account_id", "account_name", b"account_name", "account_type", b"account_type", "nav_per_unit", b"nav_per_unit", "share_class_extension", b"share_class_extension", "share_class_id", b"share_class_id", "share_class_id_type", b"share_class_id_type", "total_value", b"total_value", "transaction_type", b"transaction_type", "units", b"units"]) -> None: ...

    @typing_extensions.final
    class TransferAgencyBreachOrError(google.protobuf.message.Message):
        """Definition of a Transfer Agency Breach or Error"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _Type:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RT000ZR69.TransferAgencyBreachOrError._Type.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            SEVERITY_UNSPECIFIED: RT000ZR69.TransferAgencyBreachOrError._Type.ValueType  # 0
            REGULATORY_BREACH: RT000ZR69.TransferAgencyBreachOrError._Type.ValueType  # 1
            """A breach or error the nature of which requires reporting to the regulator"""
            INTERNAL_BREACH: RT000ZR69.TransferAgencyBreachOrError._Type.ValueType  # 2
            """An breach or error that should be logged and reported internally"""
            ERROR: RT000ZR69.TransferAgencyBreachOrError._Type.ValueType  # 3
            """An error that should be noted, but does not need to be reported"""

        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            """Enumerations of the types of the breach or error."""

        SEVERITY_UNSPECIFIED: RT000ZR69.TransferAgencyBreachOrError.Type.ValueType  # 0
        REGULATORY_BREACH: RT000ZR69.TransferAgencyBreachOrError.Type.ValueType  # 1
        """A breach or error the nature of which requires reporting to the regulator"""
        INTERNAL_BREACH: RT000ZR69.TransferAgencyBreachOrError.Type.ValueType  # 2
        """An breach or error that should be logged and reported internally"""
        ERROR: RT000ZR69.TransferAgencyBreachOrError.Type.ValueType  # 3
        """An error that should be noted, but does not need to be reported"""

        EFFECTIVE_DATE_FIELD_NUMBER: builtins.int
        IDENTIFICATION_DATE_FIELD_NUMBER: builtins.int
        RESOLUTION_DATE_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        ACTIVE_FIELD_NUMBER: builtins.int
        RESOLUTION_COMMENTARY_FIELD_NUMBER: builtins.int
        @property
        def effective_date(self) -> google.type.date_pb2.Date:
            """The date of the breach"""
        @property
        def identification_date(self) -> google.type.date_pb2.Date:
            """The date the breach was identified"""
        @property
        def resolution_date(self) -> google.type.date_pb2.Date:
            """The date the breach was resolved"""
        type: global___RT000ZR69.TransferAgencyBreachOrError.Type.ValueType
        """The type of severity of the breach or error."""
        description: builtins.str
        """Description of the breach"""
        active: builtins.bool
        """Whether the breach is active or not"""
        resolution_commentary: builtins.str
        """Resolution of the breach and underlying source of issue"""
        def __init__(
            self,
            *,
            effective_date: google.type.date_pb2.Date | None = ...,
            identification_date: google.type.date_pb2.Date | None = ...,
            resolution_date: google.type.date_pb2.Date | None = ...,
            type: global___RT000ZR69.TransferAgencyBreachOrError.Type.ValueType = ...,
            description: builtins.str = ...,
            active: builtins.bool = ...,
            resolution_commentary: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["effective_date", b"effective_date", "identification_date", b"identification_date", "resolution_date", b"resolution_date"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["active", b"active", "description", b"description", "effective_date", b"effective_date", "identification_date", b"identification_date", "resolution_commentary", b"resolution_commentary", "resolution_date", b"resolution_date", "type", b"type"]) -> None: ...

    @typing_extensions.final
    class LateTradeEvent(google.protobuf.message.Message):
        """Definition of a late trade events"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        EFFECTIVE_DATE_FIELD_NUMBER: builtins.int
        CAUSE_FIELD_NUMBER: builtins.int
        RESOLUTION_FIELD_NUMBER: builtins.int
        @property
        def effective_date(self) -> google.type.date_pb2.Date:
            """The date of the event"""
        cause: builtins.str
        """Cause of the late trade"""
        resolution: builtins.str
        """Resolution of the breach and underlying source of issue"""
        def __init__(
            self,
            *,
            effective_date: google.type.date_pb2.Date | None = ...,
            cause: builtins.str = ...,
            resolution: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["effective_date", b"effective_date"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["cause", b"cause", "effective_date", b"effective_date", "resolution", b"resolution"]) -> None: ...

    EFFECTIVE_DATE_FIELD_NUMBER: builtins.int
    PRODUCTION_DATE_FIELD_NUMBER: builtins.int
    UMBRELLA_FUND_FIELD_NUMBER: builtins.int
    FUND_FIELD_NUMBER: builtins.int
    LARGEST_SHAREHOLDERS_FIELD_NUMBER: builtins.int
    BLOCKED_ACCOUNTS_FIELD_NUMBER: builtins.int
    PEP_ACCOUNTS_FIELD_NUMBER: builtins.int
    NEW_ACCOUNTS_LAST_THREE_MONTHS_FIELD_NUMBER: builtins.int
    HIGH_RISK_ACCOUNTS_FIELD_NUMBER: builtins.int
    LARGEST_ACCOUNTS_BY_TRANSACTION_VOLUME_FIELD_NUMBER: builtins.int
    TRANSFER_AGENCY_BREACHES_FIELD_NUMBER: builtins.int
    TRANSFER_AGENCY_ERRORS_FIELD_NUMBER: builtins.int
    LATE_TRADE_EVENTS_FIELD_NUMBER: builtins.int
    SUSPICIOUS_TRANSACTIONS_FIELD_NUMBER: builtins.int
    PEP_TRANSACTIONS_FIELD_NUMBER: builtins.int
    @property
    def effective_date(self) -> google.type.date_pb2.Date:
        """The effective date as of which the data is accurate"""
    @property
    def production_date(self) -> google.type.date_pb2.Date:
        """The date data was produced"""
    umbrella_fund: builtins.str
    """The legal identifier of the umbrella
    Should conform to: https://openfunds.org/OFST005010 (Umbrella)
    See: https://openfunds.org/knowledge/whitepapers/fundnames/ for more information
    """
    fund: builtins.str
    """Name of the relevant sub-fund
    Should conform to: https://openfunds.org/OFST010110 (Legal Fund Name Only)
    Refers to the Sub-Fund in the case of an umbrella structure
    or Fund in the case of a standalone structure
    See: https://openfunds.org/knowledge/whitepapers/fundnames/ for more information
    """
    @property
    def largest_shareholders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Account]:
        """The largest N account holders by AUM."""
    @property
    def blocked_accounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Account]:
        """List of blocked accounts"""
    @property
    def pep_accounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Account]:
        """List of PEP accounts"""
    @property
    def new_accounts_last_three_months(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Account]:
        """List of new accounts last 3 months"""
    @property
    def high_risk_accounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Account]:
        """List of high risk accounts"""
    @property
    def largest_accounts_by_transaction_volume(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Account]:
        """Largest N accounts by transaction volume"""
    @property
    def transfer_agency_breaches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.TransferAgencyBreachOrError]:
        """Transfer agency breaches in the last twelve months"""
    @property
    def transfer_agency_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.TransferAgencyBreachOrError]:
        """Recent transfer agency errors. Convention is to report last twelve months"""
    @property
    def late_trade_events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.LateTradeEvent]:
        """Recent late trade events. Convention is to report last twelve months."""
    @property
    def suspicious_transactions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Transaction]:
        """List of suspicious transactions in the format:"""
    @property
    def pep_transactions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69.Transaction]:
        """List of transactions related to PEP accounts in the format:"""
    def __init__(
        self,
        *,
        effective_date: google.type.date_pb2.Date | None = ...,
        production_date: google.type.date_pb2.Date | None = ...,
        umbrella_fund: builtins.str = ...,
        fund: builtins.str = ...,
        largest_shareholders: collections.abc.Iterable[global___RT000ZR69.Account] | None = ...,
        blocked_accounts: collections.abc.Iterable[global___RT000ZR69.Account] | None = ...,
        pep_accounts: collections.abc.Iterable[global___RT000ZR69.Account] | None = ...,
        new_accounts_last_three_months: collections.abc.Iterable[global___RT000ZR69.Account] | None = ...,
        high_risk_accounts: collections.abc.Iterable[global___RT000ZR69.Account] | None = ...,
        largest_accounts_by_transaction_volume: collections.abc.Iterable[global___RT000ZR69.Account] | None = ...,
        transfer_agency_breaches: collections.abc.Iterable[global___RT000ZR69.TransferAgencyBreachOrError] | None = ...,
        transfer_agency_errors: collections.abc.Iterable[global___RT000ZR69.TransferAgencyBreachOrError] | None = ...,
        late_trade_events: collections.abc.Iterable[global___RT000ZR69.LateTradeEvent] | None = ...,
        suspicious_transactions: collections.abc.Iterable[global___RT000ZR69.Transaction] | None = ...,
        pep_transactions: collections.abc.Iterable[global___RT000ZR69.Transaction] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["effective_date", b"effective_date", "production_date", b"production_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["blocked_accounts", b"blocked_accounts", "effective_date", b"effective_date", "fund", b"fund", "high_risk_accounts", b"high_risk_accounts", "largest_accounts_by_transaction_volume", b"largest_accounts_by_transaction_volume", "largest_shareholders", b"largest_shareholders", "late_trade_events", b"late_trade_events", "new_accounts_last_three_months", b"new_accounts_last_three_months", "pep_accounts", b"pep_accounts", "pep_transactions", b"pep_transactions", "production_date", b"production_date", "suspicious_transactions", b"suspicious_transactions", "transfer_agency_breaches", b"transfer_agency_breaches", "transfer_agency_errors", b"transfer_agency_errors", "umbrella_fund", b"umbrella_fund"]) -> None: ...

global___RT000ZR69 = RT000ZR69

@typing_extensions.final
class RT000ZR69_batch(google.protobuf.message.Message):
    """Batch set of RT000ZR69 responses"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RT000ZR69]: ...
    def __init__(
        self,
        *,
        response: collections.abc.Iterable[global___RT000ZR69] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["response", b"response"]) -> None: ...

global___RT000ZR69_batch = RT000ZR69_batch
